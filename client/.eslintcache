[{"G:\\My Projects\\bc\\client\\src\\index.jsx":"1","G:\\My Projects\\bc\\client\\src\\App.jsx":"2","G:\\My Projects\\bc\\client\\src\\Datalist.jsx":"3","G:\\My Projects\\bc\\client\\src\\Visulization.jsx":"4","G:\\My Projects\\bc\\client\\src\\components\\Sidebar.jsx":"5","G:\\My Projects\\bc\\client\\src\\vizs\\Likelihood.jsx":"6","G:\\My Projects\\bc\\client\\src\\vizs\\Relevance.jsx":"7","G:\\My Projects\\bc\\client\\src\\vizs\\Inten.jsx":"8","G:\\My Projects\\bc\\client\\src\\vizs\\Country.jsx":"9","G:\\My Projects\\bc\\client\\src\\vizs\\Topictwo.jsx":"10","G:\\My Projects\\bc\\client\\src\\vizs\\Topicone.jsx":"11","G:\\My Projects\\bc\\client\\src\\vizs\\Region.jsx":"12","G:\\My Projects\\bc\\client\\src\\vizs\\Startyear.jsx":"13","G:\\My Projects\\bc\\client\\src\\vizs\\Endyear.jsx":"14","G:\\My Projects\\bc\\client\\src\\vizs\\Topic.jsx":"15","G:\\My Projects\\bc\\client\\src\\components\\Navbar.jsx":"16"},{"size":271,"mtime":1622297373502,"results":"17","hashOfConfig":"18"},{"size":644,"mtime":1622565307261,"results":"19","hashOfConfig":"18"},{"size":6477,"mtime":1622616331839,"results":"20","hashOfConfig":"18"},{"size":1810,"mtime":1622615142399,"results":"21","hashOfConfig":"18"},{"size":645,"mtime":1622607851642,"results":"22","hashOfConfig":"18"},{"size":2440,"mtime":1622606930359,"results":"23","hashOfConfig":"18"},{"size":2452,"mtime":1622479240538,"results":"24","hashOfConfig":"18"},{"size":2462,"mtime":1622534283283,"results":"25","hashOfConfig":"18"},{"size":2259,"mtime":1622547912849,"results":"26","hashOfConfig":"18"},{"size":2669,"mtime":1622477252855,"results":"27","hashOfConfig":"18"},{"size":2662,"mtime":1622477174693,"results":"28","hashOfConfig":"18"},{"size":2258,"mtime":1622547896949,"results":"29","hashOfConfig":"18"},{"size":2707,"mtime":1622479674437,"results":"30","hashOfConfig":"18"},{"size":2651,"mtime":1622536142698,"results":"31","hashOfConfig":"18"},{"size":2233,"mtime":1622526799074,"results":"32","hashOfConfig":"18"},{"size":450,"mtime":1622563100490,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"nmruwe",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"G:\\My Projects\\bc\\client\\src\\index.jsx",[],["78","79"],"G:\\My Projects\\bc\\client\\src\\App.jsx",[],"G:\\My Projects\\bc\\client\\src\\Datalist.jsx",["80","81","82","83","84","85","86"],"G:\\My Projects\\bc\\client\\src\\Visulization.jsx",[],"G:\\My Projects\\bc\\client\\src\\components\\Sidebar.jsx",[],"G:\\My Projects\\bc\\client\\src\\vizs\\Likelihood.jsx",["87","88"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisBottom,\r\n  axisRight,\r\n  index,\r\n} from \"d3\";\r\n\r\nconst Likelihood = ({ list }) => {\r\n  let likelihood = list.map((user) => {\r\n    return user.likelihood;\r\n  });\r\n  // console.log(likelihood);\r\n  let unique = [...new Set(likelihood)]\r\n  // console.log(unique);\r\n  let x = unique.filter((val)=> {\r\n    return val !== null\r\n}).sort(); \r\n let arr =  x.map((names) => {\r\n    return likelihood.filter((val)=>{\r\n        return val === names\r\n    })\r\n});\r\nlet y = (arr.map((val)=>{\r\n    return val.length\r\n}))\r\n// console.log(x);\r\n// console.log(y);\r\n\r\nconst svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleBand()\r\n      .domain(x)\r\n      .range([0, 300]).padding(.5);\r\n    const yScale = scaleLinear().domain([0, 430]).range([160, 0]);\r\n\r\n    const xAxis = axisBottom(xScale);\r\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(16rem)\").call(xAxis).style('font' , '1.2rem times');\r\n\r\n    const yAxis = axisRight(yScale).ticks(5);\r\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(30rem)\").call(yAxis).style('font' , '1.2rem times');\r\n\r\n    const colorScale = scaleLinear()\r\n    .domain([100, 300 , 400])\r\n    .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(y)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (value, index) => xScale(x[index]))\r\n      .attr(\"y\", yScale)\r\n      .attr(\"width\", xScale.bandwidth())\r\n      .on(\"mouseenter\", (value, index) => {\r\n        svg\r\n          .selectAll(\".tooltip\")\r\n          .data([value])\r\n          .join(\"text\")\r\n          .attr(\"class\", \"tooltip\")\r\n          .text(value).style('font' , '1.3rem times')\r\n          .attr(\"x\", xScale(x[index]) + xScale.bandwidth()/2)\r\n          .attr('text-anchor' , 'middle')\r\n          .attr(\"y\", yScale(value) - 3)\r\n          .transition()\r\n          .attr('opacity' , 1);\r\n      })\r\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n      .attr(\"fill\", colorScale)\r\n      .attr(\"height\", (value) => 160 - yScale(value));\r\n  }, [y]);\r\n  return (\r\n    <>\r\n      <div className=\"vizLike\">\r\n        <svg id='like' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n        <h1>Likelihood</h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Likelihood;\r\n","G:\\My Projects\\bc\\client\\src\\vizs\\Relevance.jsx",["89","90"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisBottom,\r\n  axisRight,\r\n  index,\r\n} from \"d3\";\r\n\r\nconst Relevance = ({ list }) => {\r\n  let relevance = list.map((user) => {\r\n    return user.relevance;\r\n  });\r\n  // console.log(relevance);\r\n  let unique = [...new Set(relevance)]\r\n  // console.log(unique);\r\n  let x = unique.filter((val)=> {\r\n    return val !== null\r\n}).sort(); \r\n let arr =  x.map((names) => {\r\n    return relevance.filter((val)=>{\r\n        return val === names\r\n    })\r\n});\r\nlet y = (arr.map((val)=>{\r\n    return val.length\r\n}))\r\n// console.log(x);\r\n// console.log(y);\r\n  const svgRef = useRef();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleBand()\r\n      .domain(x)\r\n      .range([0, 300]).padding(.3);\r\n    const yScale = scaleLinear().domain([0, 330]).range([160, 0]);\r\n\r\n    const xAxis = axisBottom(xScale).ticks(20);\r\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(16rem)\").call(xAxis).style('font' , '1.2rem times');\r\n\r\n    const yAxis = axisRight(yScale).ticks(5);\r\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(30rem)\").call(yAxis).style('font' , '1.2rem times');\r\n\r\n    const colorScale = scaleLinear()\r\n    .domain([100, 200 , 300])\r\n    .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(y)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (value, index) => xScale(x[index]))\r\n      .attr(\"y\", yScale)\r\n      .attr(\"width\", xScale.bandwidth())\r\n      .on(\"mouseenter\", (value, index) => {\r\n        svg\r\n          .selectAll(\".tooltip\")\r\n          .data([value])\r\n          .join(\"text\")\r\n          .attr(\"class\", \"tooltip\")\r\n          .text(value).style('font' , '1.3rem times')\r\n          .attr(\"x\", xScale(x[index]) + xScale.bandwidth()/2)\r\n          .attr('text-anchor' , 'middle')\r\n          .attr(\"y\", yScale(value) - 3)\r\n          .transition()\r\n          .attr('opacity' , 1);\r\n      })\r\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n      .attr(\"fill\", colorScale)\r\n      .attr(\"height\", (value) => 160 - yScale(value));\r\n  }, [y]);\r\n  return (\r\n    <>\r\n      <div className=\"vizRel\">\r\n        <svg id='relevance' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n        <h1>Relevance</h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Relevance;\r\n","G:\\My Projects\\bc\\client\\src\\vizs\\Inten.jsx",["91"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisBottom,\r\n  axisRight,\r\n} from \"d3\";\r\n\r\nconst Inten = ({ list }) => {\r\n  \r\n\r\n  let intensity = list.map((user) => {\r\n    return user.intensity;\r\n  });\r\n  // console.log(intensity);\r\n  let unique = [...new Set(intensity)]\r\n  // console.log(unique);\r\n  let x = unique.filter((val)=> {\r\n    return val !== null\r\n}).sort(function (a , b) {\r\n  return a - b\r\n}); \r\n let arr =  x.map((names) => {\r\n    return intensity.filter((val)=>{\r\n        return val === names\r\n    })\r\n});\r\nlet y = (arr.map((val)=>{\r\n    return val.length\r\n}))\r\n// console.log(x);\r\n// console.log(y);\r\n\r\nconst svgRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleBand()\r\n      .domain(x)\r\n      .range([0, 600]).padding(.2);\r\n    const yScale = scaleLinear().domain([0, 230]).range([160, 0]);\r\n\r\n    const xAxis = axisBottom(xScale);\r\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(16rem)\").call(xAxis).style('font' , '1.3rem times');\r\n\r\n    const yAxis = axisRight(yScale).ticks(5);\r\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(60rem)\").call(yAxis).style('font' , '1.3rem times');\r\n\r\n    const colorScale = scaleLinear()\r\n    .domain([50, 100 , 230])\r\n    .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(y)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (value, index) => xScale(x[index]))\r\n      .attr(\"y\", yScale)\r\n      .attr(\"width\", xScale.bandwidth())\r\n      .on(\"mouseenter\", (value, index) => {\r\n        svg\r\n          .selectAll(\".tooltip\")\r\n          .data([value])\r\n          .join(\"text\")\r\n          .attr(\"class\", \"tooltip\")\r\n          .text(value).style('font' , '1.3rem times')\r\n          .attr(\"x\", xScale(x[index]) + xScale.bandwidth()/2)\r\n          .attr('text-anchor' , 'middle')\r\n          .attr(\"y\", yScale(value) - 5)\r\n          .transition()\r\n          .attr('opacity' , 1);\r\n      })\r\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n      .attr(\"fill\", colorScale)\r\n      .attr(\"height\", (value) => 160 - yScale(value));\r\n  }, [y]);\r\n  return (\r\n    <>\r\n      <div className=\"vizInten\">\r\n        <svg id='inten' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n        <h1>Intensity</h1>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inten;\r\n","G:\\My Projects\\bc\\client\\src\\vizs\\Country.jsx",["92","93"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisTop,\r\n  axisLeft,\r\n  index,\r\n} from \"d3\";\r\n\r\nconst Country = ({ list }) => {\r\n  \r\n  let country = list.map((user) => {\r\n    return user.country;\r\n  });\r\n  let unique = [...new Set(country)]\r\n  // console.log(unique);\r\n  let y = unique.filter((val)=> {\r\n    return val !== \"\"\r\n}); \r\n// console.log(y);\r\n let arr =  y.map((names) => {\r\n    return country.filter((val)=>{\r\n        return val === names\r\n    })\r\n});\r\nlet x = (arr.map((val)=>{\r\n    return val.length\r\n}))\r\n// console.log(x);\r\n// console.log(y);\r\n  const svgRef = useRef();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleLinear().domain([0,120]).range([0, 500]);\r\n    const yScale = scaleBand()\r\n      .domain(y)\r\n      .range([0, 1500]).padding(.2);\r\n    const xAxis = axisTop(xScale).ticks(5);\r\n    svg.select('.x-axis').call(xAxis).style('font' , '1.3rem times')\r\n    const yAxis = axisLeft(yScale);\r\n    svg.select(\".y-axis\").call(yAxis).style('font' , '1.3rem times');\r\n\r\n    const colorScale = scaleLinear()\r\n    .domain([10, 50 , 410])\r\n    .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n\r\n    svg.selectAll('rect').data(x).enter().append('rect')\r\n    .attr('y' , (value, index) => yScale(y[index]))\r\n    .attr(\"width\", (value) => xScale(value))\r\n    .attr(\"height\", yScale.bandwidth())\r\n    .attr(\"fill\", colorScale)\r\n    .on(\"mouseenter\", (value, index) => {\r\n            svg\r\n              .selectAll(\".tooltip\")\r\n              .data([value])\r\n              .join(\"text\")\r\n              .attr(\"class\", \"tooltip\")\r\n              .text(value)\r\n              .attr(\"y\", yScale(y[index]) + yScale.bandwidth()/1.5)\r\n              .attr('text-anchor' , 'middle')\r\n              .attr(\"x\", xScale(value) + 10)\r\n              .transition()\r\n              .attr('opacity' , 1);\r\n          })\r\n          .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n  }, [x]);\r\n  return (\r\n    <>\r\n      <div className=\"vizCon\">\r\n        <h1>Countries</h1>\r\n        <svg id='country' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","G:\\My Projects\\bc\\client\\src\\vizs\\Topictwo.jsx",["94","95"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisBottom,\r\n  axisRight,\r\n  index,\r\n} from \"d3\";\r\n\r\nconst Topictwo = ({ list }) => {\r\n  \r\n  let topic = list.map((user) => {\r\n    return user.topic;\r\n  });\r\n  let unique = [...new Set(topic)]\r\n  // console.log(unique);\r\n  let a = unique.filter((val)=> {\r\n    return val !== \"\"\r\n}).sort(); \r\nlet x = a.splice(48 , a.length)\r\n// console.log(x);\r\n let arr =  x.map((names) => {\r\n    return topic.filter((val)=>{\r\n        return val === names\r\n    })\r\n});\r\nlet y = (arr.map((val)=>{\r\n    return val.length\r\n}))\r\n// console.log(x);\r\n// console.log(y);\r\n  const svgRef = useRef();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleBand()\r\n      .domain(x.map((value, index) => index + 1))\r\n      .range([0, 1000]).padding(.2);\r\n    const yScale = scaleLinear().domain([0, 415]).range([300, 0]);\r\n\r\n    const xAxis = axisBottom(xScale);\r\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(30rem)\").call(xAxis);\r\n\r\n    const yAxis = axisRight(yScale).ticks(5);\r\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(100rem)\").call(yAxis);\r\n\r\n    const colorScale = scaleLinear()\r\n    .domain([50, 100 , 410])\r\n    .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(y)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (value, index) => xScale(index + 1))\r\n      .attr(\"y\", yScale)\r\n      .attr(\"width\", xScale.bandwidth())\r\n      .on(\"mouseenter\", (value, index) => {\r\n        svg\r\n          .selectAll(\".tooltip\")\r\n          .data([value])\r\n          .join(\"text\")\r\n          .attr(\"class\", \"tooltip\")\r\n          .text(value)\r\n          .attr(\"x\", xScale(index + 1) + xScale.bandwidth()/2)\r\n          .attr('text-anchor' , 'middle')\r\n          .attr(\"y\", yScale(value) - 1)\r\n          .transition()\r\n          .attr('opacity' , 1);\r\n      })\r\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n      .attr(\"fill\", colorScale)\r\n      .attr(\"height\", (value) => 300 - yScale(value));\r\n  }, [y]);\r\n  return (\r\n    <>\r\n      <div className=\"viz viz-list\">\r\n        <svg className='inten' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n        <h1>Topic - 1</h1>\r\n        <div className=\"conList\">\r\n          {\r\n            x.map((val , index)=>{\r\n              return (\r\n                <h3 key={index}> ({index + 1}) <span>{val}</span></h3>\r\n              )\r\n            })\r\n          }\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Topictwo;\r\n",["96","97"],"G:\\My Projects\\bc\\client\\src\\vizs\\Topicone.jsx",["98","99"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisBottom,\r\n  axisRight,\r\n  index,\r\n} from \"d3\";\r\n\r\nconst Topicone = ({ list }) => {\r\n  \r\n  let topic = list.map((user) => {\r\n    return user.topic;\r\n  });\r\n  let unique = [...new Set(topic)]\r\n  // console.log(unique);\r\n  let a = unique.filter((val)=> {\r\n    return val !== \"\"\r\n}).sort(); \r\nlet x = a.splice(0 , 47)\r\n// console.log(x);\r\n let arr =  x.map((names) => {\r\n    return topic.filter((val)=>{\r\n        return val === names\r\n    })\r\n});\r\nlet y = (arr.map((val)=>{\r\n    return val.length\r\n}))\r\n// console.log(x);\r\n// console.log(y);\r\n  const svgRef = useRef();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleBand()\r\n      .domain(x.map((value, index) => index + 1))\r\n      .range([0, 1000]).padding(.2);\r\n    const yScale = scaleLinear().domain([0, 100]).range([300, 0]);\r\n\r\n    const xAxis = axisBottom(xScale);\r\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(30rem)\").call(xAxis);\r\n\r\n    const yAxis = axisRight(yScale).ticks(5);\r\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(100rem)\").call(yAxis);\r\n\r\n    const colorScale = scaleLinear()\r\n    .domain([50, 100 , 230])\r\n    .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(y)\r\n      .join(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (value, index) => xScale(index + 1))\r\n      .attr(\"y\", yScale)\r\n      .attr(\"width\", xScale.bandwidth())\r\n      .on(\"mouseenter\", (value, index) => {\r\n        svg\r\n          .selectAll(\".tooltip\")\r\n          .data([value])\r\n          .join(\"text\")\r\n          .attr(\"class\", \"tooltip\")\r\n          .text(value)\r\n          .attr(\"x\", xScale(index + 1) + xScale.bandwidth()/2)\r\n          .attr('text-anchor' , 'middle')\r\n          .attr(\"y\", yScale(value) - 1)\r\n          .transition()\r\n          .attr('opacity' , 1);\r\n      })\r\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n      .attr(\"fill\", colorScale)\r\n      .attr(\"height\", (value) => 300 - yScale(value));\r\n  }, [y]);\r\n  return (\r\n    <>\r\n      <div className=\"viz viz-list\">\r\n        <svg className='inten' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n        <h1>Topic - 1</h1>\r\n        <div className=\"conList\">\r\n          {\r\n            x.map((val , index)=>{\r\n              return (\r\n                <h3 key={index}> ({index + 1}) <span>{val}</span></h3>\r\n              )\r\n            })\r\n          }\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Topicone;\r\n","G:\\My Projects\\bc\\client\\src\\vizs\\Region.jsx",["100","101"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisTop,\r\n  axisLeft,\r\n  index,\r\n} from \"d3\";\r\n\r\nconst Region = ({ list }) => {\r\n  \r\n  let region = list.map((user) => {\r\n    return user.region;\r\n  });\r\n  let unique = [...new Set(region)]\r\n  // console.log(unique);\r\n  let y = unique.filter((val)=> {\r\n    return val !== \"\"\r\n}).sort(); \r\n// console.log(y);\r\n let arr =  y.map((names) => {\r\n    return region.filter((val)=>{\r\n        return val === names\r\n    })\r\n});\r\nlet x = (arr.map((val)=>{\r\n    return val.length\r\n}))\r\n// console.log(x);\r\n// console.log(y);\r\n  const svgRef = useRef();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleLinear().domain([0,140]).range([0, 500]);\r\n    const yScale = scaleBand()\r\n      .domain(y)\r\n      .range([0, 600]).padding(.2);\r\n    const xAxis = axisTop(xScale).ticks(5);\r\n    svg.select('.x-axis').call(xAxis).style('font' , '1.3rem times')\r\n    const yAxis = axisLeft(yScale);\r\n    svg.select(\".y-axis\").call(yAxis).style('font' , '1.3rem times');\r\n\r\n    const colorScale = scaleLinear()\r\n    .domain([10, 50 , 410])\r\n    .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n\r\n    svg.selectAll('rect').data(x).enter().append('rect')\r\n    .attr('y' , (value, index) => yScale(y[index]))\r\n    .attr(\"width\", (value) => xScale(value))\r\n    .attr(\"height\", yScale.bandwidth())\r\n    .attr(\"fill\", colorScale)\r\n    .on(\"mouseenter\", (value, index) => {\r\n            svg\r\n              .selectAll(\".tooltip\")\r\n              .data([value])\r\n              .join(\"text\")\r\n              .attr(\"class\", \"tooltip\")\r\n              .text(value)\r\n              .attr(\"y\", yScale(y[index]) + yScale.bandwidth()/1.5)\r\n              .attr('text-anchor' , 'middle')\r\n              .attr(\"x\", xScale(value) + 10)\r\n              .transition()\r\n              .attr('opacity' , 1);\r\n          })\r\n          .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n  }, [x]);\r\n  return (\r\n    <>\r\n      <div className=\"vizRegion\">\r\n        <h1>Region</h1>\r\n        <svg id='region' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Region;\r\n","G:\\My Projects\\bc\\client\\src\\vizs\\Startyear.jsx",["102"],"import React, { useEffect, useRef }  from 'react'\r\nimport {\r\n    select,\r\n    scaleLinear,\r\n    scaleBand,\r\n    axisBottom,\r\n    axisRight,\r\n  } from \"d3\";\r\n\r\nconst Startyear = ({list}) => {\r\n    let start_year = list.map((user) => {\r\n        return user.start_year;\r\n      });\r\n      // console.log(start_year);\r\n      let unique = [...new Set(start_year)]\r\n    //   console.log(unique);\r\n      let x = unique.filter((val)=> {\r\n        return val !== null\r\n    }).sort(); \r\n     let arr =  x.map((names) => {\r\n        return start_year.filter((val)=>{\r\n            return val === names\r\n        })\r\n    });\r\n    let y = (arr.map((val)=>{\r\n        return val.length\r\n    }))\r\n    // console.log(x);\r\n    // console.log(y);\r\n\r\n    const svgRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const svg = select(svgRef.current);\r\n        const xScale = scaleBand()\r\n          .domain(x)\r\n          .range([0, 600]).padding(.2);\r\n        const yScale = scaleLinear().domain([0, 180]).range([160, 0]);\r\n    \r\n        const xAxis = axisBottom(xScale);\r\n        svg.select(\".x-axis\").style(\"transform\", \"translateY(16rem)\").call(xAxis).style('font' , '1.2rem times');\r\n    \r\n        const yAxis = axisRight(yScale).ticks(5);\r\n        svg.select(\".y-axis\").style(\"transform\", \"translateX(60rem)\").call(yAxis).style('font' , '1.2rem times');\r\n    \r\n        const colorScale = scaleLinear()\r\n        .domain([50, 100 , 230])\r\n        .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n    \r\n        svg\r\n          .selectAll(\".bar\")\r\n          .data(y)\r\n          .join(\"rect\")\r\n          .attr(\"class\", \"bar\")\r\n          .attr(\"x\", (value, index) => xScale(x[index]))\r\n          .attr(\"y\", yScale)\r\n          .attr(\"width\", xScale.bandwidth())\r\n          .on(\"mouseenter\", (value, index) => {\r\n            svg\r\n              .selectAll(\".tooltip\")\r\n              .data([value])\r\n              .join(\"text\")\r\n              .attr(\"class\", \"tooltip\")\r\n              .text(value).style('font' , '1.5rem times')\r\n              .attr(\"x\", xScale(x[index]) + xScale.bandwidth()/2)\r\n              .attr('text-anchor' , 'middle')\r\n              .attr(\"y\", yScale(value) - 5)\r\n              .transition()\r\n              .attr('opacity' , 1);\r\n          })\r\n          .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n          .attr(\"fill\", colorScale)\r\n          .attr(\"height\", (value) => 160 - yScale(value));\r\n      }, [y]);\r\n\r\n    return (\r\n        <>\r\n             <div className=\"vizStart\">\r\n        <svg id='startYear' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n        <h1>Start Year</h1>\r\n      </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Startyear\r\n","G:\\My Projects\\bc\\client\\src\\vizs\\Endyear.jsx",["103"],"import React, { useEffect, useRef }  from 'react'\r\nimport {\r\n    select,\r\n    scaleLinear,\r\n    scaleBand,\r\n    axisBottom,\r\n    axisRight,\r\n  } from \"d3\";\r\n\r\nconst Endyear = ({list}) => {\r\n    let end_year = list.map((user) => {\r\n        return user.end_year;\r\n      });\r\n      // console.log(end_year);\r\n      let unique = [...new Set(end_year)]\r\n      // console.log(unique);\r\n      let x = unique.filter((val)=> {\r\n        return val !== ''\r\n    }).sort(); \r\n     let arr =  x.map((names) => {\r\n        return end_year.filter((val)=>{\r\n            return val === names\r\n        })\r\n    });\r\n    let y = (arr.map((val)=>{\r\n        return val.length\r\n    }))\r\n    // console.log(x);\r\n    // console.log(y);\r\n\r\n    const svgRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const svg = select(svgRef.current);\r\n        const xScale = scaleBand()\r\n          .domain(x)\r\n          .range([0, 650]).padding(.2);\r\n        const yScale = scaleLinear().domain([0, 60]).range([220, 0]);\r\n    \r\n        const xAxis = axisBottom(xScale);\r\n        svg.select(\".x-axis\").style(\"transform\", \"translateY(22rem)\").call(xAxis).style('font' , '1.1rem times');\r\n    \r\n        const yAxis = axisRight(yScale).ticks(5);\r\n        svg.select(\".y-axis\").style(\"transform\", \"translateX(65rem)\").call(yAxis).style('font' , '1.2rem times');\r\n    \r\n        const colorScale = scaleLinear()\r\n        .domain([10, 30 , 60])\r\n        .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n    \r\n        svg\r\n          .selectAll(\".bar\")\r\n          .data(y)\r\n          .join(\"rect\")\r\n          .attr(\"class\", \"bar\")\r\n          .attr(\"x\", (value, index) => xScale(x[index]))\r\n          .attr(\"y\", yScale)\r\n          .attr(\"width\", xScale.bandwidth())\r\n          .on(\"mouseenter\", (value, index) => {\r\n            svg\r\n              .selectAll(\".tooltip\")\r\n              .data([value])\r\n              .join(\"text\")\r\n              .attr(\"class\", \"tooltip\")\r\n              .text(value)\r\n              .attr(\"x\", xScale(x[index]) + xScale.bandwidth()/2)\r\n              .attr('text-anchor' , 'middle')\r\n              .attr(\"y\", yScale(value) - 5)\r\n              .transition()\r\n              .attr('opacity' , 1);\r\n          })\r\n          .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n          .attr(\"fill\", colorScale)\r\n          .attr(\"height\", (value) => 220 - yScale(value));\r\n      }, [y]);\r\n\r\n    return (\r\n        <>\r\n             <div className=\"vizEnd\">\r\n        <svg id='endYear' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n        <h1>End Year</h1>\r\n      </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Endyear\r\n","G:\\My Projects\\bc\\client\\src\\vizs\\Topic.jsx",["104","105"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleBand,\r\n  axisTop,\r\n  axisLeft,\r\n  index,\r\n} from \"d3\";\r\n\r\nconst Topic = ({ list }) => {\r\n  \r\n  let topic = list.map((user) => {\r\n    return user.topic;\r\n  });\r\n  let unique = [...new Set(topic)]\r\n//   console.log(unique);\r\n  let y = unique.filter((val)=> {\r\n    return val !== \"\"\r\n});; \r\n// console.log(y);\r\n let arr =  y.map((names) => {\r\n    return topic.filter((val)=>{\r\n        return val === names\r\n    })\r\n});\r\nlet x = (arr.map((val)=>{\r\n    return val.length\r\n}))\r\n// console.log(x);\r\n// console.log(y);\r\n  const svgRef = useRef();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    const xScale = scaleLinear().domain([0,410]).range([0, 260]);\r\n    const yScale = scaleBand()\r\n      .domain(y)\r\n      .range([0, 2350]).padding(.2);\r\n    const xAxis = axisTop(xScale);\r\n    svg.select('.x-axis').call(xAxis).style('font' , '1.3rem times')\r\n    const yAxis = axisLeft(yScale);\r\n    svg.select(\".y-axis\").call(yAxis).style('font' , '1.3rem times');\r\n\r\n    const colorScale = scaleLinear()\r\n    .domain([10, 50 , 410])\r\n    .range(['#0818A8' , '#4169E1' , \"#4682B4\"]);\r\n\r\n    svg.selectAll('rect').data(x).enter().append('rect')\r\n    .attr('y' , (value, index) => yScale(y[index]))\r\n    .attr(\"width\", (value) => xScale(value))\r\n    .attr(\"height\", yScale.bandwidth())\r\n    .attr(\"fill\", colorScale)\r\n    .on(\"mouseenter\", (value, index) => {\r\n            svg\r\n              .selectAll(\".tooltip\")\r\n              .data([value])\r\n              .join(\"text\")\r\n              .attr(\"class\", \"tooltip\")\r\n              .text(value)\r\n              .attr(\"y\", yScale(y[index]) + yScale.bandwidth()/1.5)\r\n              .attr('text-anchor' , 'middle')\r\n              .attr(\"x\", xScale(value) + 10)\r\n              .transition()\r\n              .attr('opacity' , 1);\r\n          })\r\n          .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\r\n  }, [x]);\r\n  return (\r\n    <>\r\n      <div className=\"vizTop\">\r\n        <h1>Topic</h1>\r\n        <svg id='topic' ref={svgRef}>\r\n          <g className=\"x-axis\" />\r\n          <g className=\"y-axis\" />\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Topic;\r\n","G:\\My Projects\\bc\\client\\src\\components\\Navbar.jsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":111,"column":6,"nodeType":"112","endLine":111,"endColumn":23,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":114,"column":6,"nodeType":"112","endLine":114,"endColumn":20,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":117,"column":6,"nodeType":"112","endLine":117,"endColumn":21,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"118","line":120,"column":6,"nodeType":"112","endLine":120,"endColumn":21,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":123,"column":6,"nodeType":"112","endLine":123,"endColumn":21,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":126,"column":6,"nodeType":"112","endLine":126,"endColumn":21,"suggestions":"123"},{"ruleId":"110","severity":1,"message":"124","line":129,"column":6,"nodeType":"112","endLine":129,"endColumn":22,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":8},{"ruleId":"110","severity":1,"message":"130","line":74,"column":6,"nodeType":"112","endLine":74,"endColumn":9,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":8},{"ruleId":"110","severity":1,"message":"130","line":75,"column":6,"nodeType":"112","endLine":75,"endColumn":9,"suggestions":"132"},{"ruleId":"110","severity":1,"message":"130","line":79,"column":6,"nodeType":"112","endLine":79,"endColumn":9,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":8},{"ruleId":"110","severity":1,"message":"134","line":70,"column":6,"nodeType":"112","endLine":70,"endColumn":9,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":8},{"ruleId":"110","severity":1,"message":"130","line":78,"column":6,"nodeType":"112","endLine":78,"endColumn":9,"suggestions":"136"},{"ruleId":"106","replacedBy":"137"},{"ruleId":"108","replacedBy":"138"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":8},{"ruleId":"110","severity":1,"message":"130","line":78,"column":6,"nodeType":"112","endLine":78,"endColumn":9,"suggestions":"139"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":8},{"ruleId":"110","severity":1,"message":"134","line":70,"column":6,"nodeType":"112","endLine":70,"endColumn":9,"suggestions":"140"},{"ruleId":"110","severity":1,"message":"130","line":74,"column":10,"nodeType":"112","endLine":74,"endColumn":13,"suggestions":"141"},{"ruleId":"110","severity":1,"message":"130","line":74,"column":10,"nodeType":"112","endLine":74,"endColumn":13,"suggestions":"142"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":8},{"ruleId":"110","severity":1,"message":"134","line":70,"column":6,"nodeType":"112","endLine":70,"endColumn":9,"suggestions":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searcEvent'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'searcEvent1'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'searcEvent2'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'searcEvent3'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'searcEvent4'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has a missing dependency: 'searcEvent5'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'searcEvent6'. Either include it or remove the dependency array.",["152"],"no-unused-vars","'index' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'x'. Either include it or remove the dependency array.",["153"],["154"],["155"],"React Hook useEffect has a missing dependency: 'y'. Either include it or remove the dependency array.",["156"],["157"],["144"],["145"],["158"],["159"],["160"],["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"177","fix":"180"},{"desc":"177","fix":"181"},{"desc":"177","fix":"182"},{"desc":"177","fix":"183"},{"desc":"177","fix":"184"},{"desc":"177","fix":"185"},{"desc":"177","fix":"186"},{"desc":"177","fix":"187"},"Update the dependencies array to be: [searcEvent, search.end_year]",{"range":"188","text":"189"},"Update the dependencies array to be: [searcEvent1, search.topic]",{"range":"190","text":"191"},"Update the dependencies array to be: [searcEvent2, search.sector]",{"range":"192","text":"193"},"Update the dependencies array to be: [searcEvent3, search.region]",{"range":"194","text":"195"},"Update the dependencies array to be: [searcEvent4, search.pestle]",{"range":"196","text":"197"},"Update the dependencies array to be: [searcEvent5, search.source]",{"range":"198","text":"199"},"Update the dependencies array to be: [searcEvent6, search.country]",{"range":"200","text":"201"},"Update the dependencies array to be: [x, y]",{"range":"202","text":"203"},{"range":"204","text":"203"},{"range":"205","text":"203"},{"range":"206","text":"203"},{"range":"207","text":"203"},{"range":"208","text":"203"},{"range":"209","text":"203"},{"range":"210","text":"203"},{"range":"211","text":"203"},{"range":"212","text":"203"},[2935,2952],"[searcEvent, search.end_year]",[3002,3016],"[searcEvent1, search.topic]",[3066,3081],"[searcEvent2, search.sector]",[3131,3146],"[searcEvent3, search.region]",[3196,3211],"[searcEvent4, search.pestle]",[3261,3276],"[searcEvent5, search.source]",[3326,3342],"[searcEvent6, search.country]",[2162,2165],"[x, y]",[2172,2175],[2188,2191],[1983,1986],[2115,2118],[2108,2111],[1984,1987],[2406,2409],[2358,2361],[1965,1968]]